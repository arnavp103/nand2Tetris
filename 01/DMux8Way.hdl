// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=Notsel0);
    Not(in=sel[1], out=Notsel1);
    Not(in=sel[2], out=Notsel2);
    // a
    And(a=in, b=Notsel2, out=inAndNotsel2);
    And(a=inAndNotsel2, b=Notsel1, out=inAndNotsel2AndNotsel1);
    And(a=inAndNotsel2AndNotsel1, b=Notsel0, out=a);
    // b
    And(a=inAndNotsel2AndNotsel1, b=sel[0], out=b);
    // c
    And(a=inAndNotsel2, b=sel[1], out=inAndNotsel2Andsel1);
    And(a=inAndNotsel2Andsel1, b=Notsel0, out=c);
    // d
    And(a=inAndNotsel2Andsel1, b=sel[0], out=d);
    // e
    And(a=in, b=sel[2], out=inAndsel2);
    And(a=inAndsel2, b=Notsel1, out=inAndsel2AndNotsel1);
    And(a=inAndsel2AndNotsel1, b=Notsel0, out=e);
    // f
    And(a=inAndsel2AndNotsel1, b=sel[0], out=f);
    // g
    And(a=inAndsel2, b=sel[1], out=inAndsel2Andsel1);
    And(a=inAndsel2Andsel1, b=Notsel0, out=g);
    // h
    And(a=inAndsel2Andsel1, b=sel[0], out=h);
}